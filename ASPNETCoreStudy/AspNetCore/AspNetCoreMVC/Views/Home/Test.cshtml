

<h1>Hello Razor Template</h1>
@* 주석 *@
@* C# 코드가 시작한다는 의미로 @를 이용 *@
@* C# 코드는 ' '(공백)에 의해 끝난다 .공백을 넣을거면 괄호로 감싸야함 *@
@* C# 코드 영역(code block)이라는 의미로 @{} *@

@* ViewModel을 사용하려면 넘어온게 어떤 형식인지 알려줘야함 *@
@* 그 다음부터는 Model 프로퍼티를 이용해서 접근 가능 *@
@model TestViewModel

@section Scripts{
    <h1>I am Section</h1>
}

<h2>@DateTime.Now thisisNotC#</h2>
<h3>@(1 + 1)</h3>

@{
    List<string> names = new List<string> { "Fast" };
}

@*@if (Model.Names.Count < 5)
    {
        <h1>데이터가 많지않네 ㅎㅎ</h1>
    }*@

@*<ul>
        @for (int i = 0; i < Model.Names.Count; i++)
        {
            <li>@Model.Names[i]</li>
        }
    </ul>*@

@{
    ViewData["Title"] = "Test Buy Item";

}

@* PartialView 사용 *@
@section Scripts {
@Html.Partial("ValidationScriptsPartial");'
}
<h1> Hello Razor Template</h1>

@*input의 asp-for는 내용 출력 뿐 아니라, input의 type도 결정하는데 도움 준다. *@
@* number,tesxt,hidden,password,tel, email,url,date... *@
@* Property가 어떤 형식인지,[EmailAddress] [Url]과 같은 Attribute가 붙었는지 등  *@
@* asp-route- ~ 를 사용해 ~를 넘겨줌 *@
@*  *@
<form asp-action="BuyItem" asp-controller="Home" asp-route-id="@Model.Id" asp-route-count="@Model.Count">
    <div class="form-group">
        @* Tag helper사용:asp-for *@
        <label asp-for="Id"></label>
        <input class="form-control" asp-for="Id" />
        <span asp-validation-for="Id"></span>
    </div>
    <div class="form-group">
        <label asp-for="Count"></label>
        <input class="form-control" asp-for="Count" />
        <span asp-validation-for="Count"></span>
    </div>
    <button type="submit" class="btn btn-primary">Submit</button>
    @* 걸러진 모든 에러메시지를 다 보여줌 *@
    <div asp-validation-summary="All"></div>
</form>